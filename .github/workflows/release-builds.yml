# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: 2. Release Tauri Builds

on:
  workflow_run:
    workflows: ["1. Build Tauri Bundles"]
    types:
      - completed

jobs:
  commit:
    name: Create GitHub Release
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    defaults:
      run:
        shell: bash
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Expand artifacts into workspace layout
        run: |
          set -euo pipefail
          mkdir -p src-tauri/target/release/bundle
          # macOS
          if ls artifacts/bundle-macos-14 1>/dev/null 2>&1; then
            mkdir -p src-tauri/target/release/bundle/macos
            cp -R artifacts/bundle-macos-14/* src-tauri/target/release/bundle/macos/ || true
          fi
          # Windows
          if ls artifacts/bundle-windows-2022 1>/dev/null 2>&1; then
            mkdir -p src-tauri/target/release/bundle/nsis src-tauri/target/release/bundle/msi
            cp -R artifacts/bundle-windows-2022/* src-tauri/target/release/bundle/ -v || true
          fi
          # Linux
          if ls artifacts/bundle-ubuntu-22.04 1>/dev/null 2>&1; then
            mkdir -p src-tauri/target/release/bundle/appimage src-tauri/target/release/bundle/deb src-tauri/target/release/bundle/rpm
            cp -R artifacts/bundle-ubuntu-22.04/* src-tauri/target/release/bundle/ -v || true
          fi

      - name: Install helpers
        run: |
          sudo apt-get update
          sudo apt-get install -y bash coreutils findutils p7zip-full msitools dpkg-dev rpm2cpio cpio

      - name: Make gather scripts executable
        run: chmod +x steam/scripts/*.sh

      - name: Gather macOS
        run: bash steam/scripts/gather_macos.sh

      - name: Gather Linux
        run: bash steam/scripts/gather_linux.sh

      - name: Gather Windows
        run: ./steam/scripts/gather_windows.sh

      - name: Create compressed archives for release
        run: |
          set -euo pipefail
          mkdir -p release-archives

          # Compress macOS
          if [ -d "release/macos/Sixarata" ]; then
            cd release/macos
            tar -czf ../../release-archives/sixarata-macos.tar.gz Sixarata/
            cd ../..
          fi

          # Compress Linux
          if [ -d "release/linux/Sixarata" ]; then
            cd release/linux
            tar -czf ../../release-archives/sixarata-linux.tar.gz Sixarata/
            cd ../..
          fi

          # Compress Windows
          if [ -d "release/win64/Sixarata" ]; then
            cd release/win64
            7z a -tzip ../../release-archives/sixarata-windows.zip Sixarata/
            cd ../..
          fi

      - name: Generate release tag
        id: tag
        run: |
          TAG="build-$(date +'%Y%m%d-%H%M%S')-${GITHUB_SHA::7}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Generated tag: $TAG"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: "Auto-build: ${{ steps.tag.outputs.tag }}"
          body: |
            Automated build from commit: ${{ github.sha }}

            Branch: ${{ github.event.workflow_run.head_branch }}
            Workflow Run: ${{ github.event.workflow_run.html_url }}
          files: |
            release-archives/sixarata-*.tar.gz
            release-archives/sixarata-*.zip
          draft: false
          prerelease: true

      - name: Upload Steam-ready folders as artifact
        uses: actions/upload-artifact@v4
        with:
          name: steam-release-folders
          path: |
            release/macos/Sixarata/**
            release/linux/Sixarata/**
            release/win64/Sixarata/**
